{"version":3,"sources":["interfaces/.components/Login/Login.module.scss","App.module.scss","interfaces/.components/Header/Header.module.scss","interfaces/.components/Footer/Footer.module.scss","serviceWorker.js","interfaces/.components/Header/Header.jsx","interfaces/.components/Footer/Footer.jsx","interfaces/.components/Login/Login.jsx","App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","styles","header","Footer","Login","useState","isLogin","setIsLogin","isPassVisible","regEmail","setRegEmail","regUsuario","setRegUsuario","regPassword","setRegPassword","loginUsuario","setLoginUsuario","loginPassword","setLoginPassword","onToggleView","sleep","time","Promise","resolve","setTimeout","logForm","signup","slideUp","formTitle","onClick","formHolder","inputWrap","type","input","placeholder","id","name","onChange","event","target","value","fetch","then","response","json","replace","catch","error","submitButton","login","center","App","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5c91c543.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logForm\":\"Login_logForm__iEPCb\",\"signup\":\"Login_signup__3ZZV8\",\"slideUp\":\"Login_slideUp__2oUab\",\"formHolder\":\"Login_formHolder__2WI6o\",\"submitButton\":\"Login_submitButton__1i0pM\",\"formTitle\":\"Login_formTitle__RykMu\",\"input\":\"Login_input___jZ5k\",\"login\":\"Login_login__1quod\",\"center\":\"Login_center__3n8wu\",\"inputWrap\":\"Login_inputWrap__1cu_a\",\"showPass\":\"Login_showPass__2k5fs\",\"icon\":\"Login_icon__EvuA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1DpUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3k7QN\",\"logo\":\"Header_logo__3MfxW\",\"colorPicker\":\"Header_colorPicker__2ncRj\",\"switch\":\"Header_switch__1nEVt\",\"spin\":\"Header_spin__2cyXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__kaf5Q\",\"link\":\"Footer_link__3EgnI\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport styles from './Header.module.scss';\n\nimport { ColorPicker } from './.components/ColorPicker';\n//import { Switch } from './.components/Switch';\n\nexport const Header = () => {\n  return <header className={styles.header}></header>;\n};\n","import React from 'react';\n\nimport { IoIosHeart } from 'react-icons/io';\n\nimport styles from './Footer.module.scss';\n\nexport const Footer = () => {\n  //return (\n  //  <div className={styles.footer}>\n  //    Made with <IoIosHeart /> by{' '}\n  //    <a className={styles.link} href=\"https://arrastia.me\" target=\"_blank\" rel=\"noopener noreferrer\">\n  //      Arrastia\n  //    </a>\n  //  </div>\n  //);\n\n  return <div></div>;\n};\n","import React, { Fragment, useState } from 'react';\n\nimport styles from './Login.module.scss';\n\nexport const Login = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isPassVisible, setIsPassVisible] = useState(false);\n  const [regEmail, setRegEmail] = useState('');\n  const [regUsuario, setRegUsuario] = useState('');\n  const [regPassword, setRegPassword] = useState('');\n  const [loginUsuario, setLoginUsuario] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n\n  const onTogglePass = () => setIsPassVisible(!isPassVisible);\n\n  const onToggleView = () => setIsLogin(!isLogin);\n\n  const regEmailChange = event => {\n    setRegEmail(event.target.value);\n  };\n\n  const regUsuarioChange = event => {\n    setRegUsuario(event.target.value);\n  };\n\n  const regPasswordChange = event => {\n    setRegPassword(event.target.value);\n  };\n\n  const loginUsuarioChange = event => {\n    setLoginUsuario(event.target.value);\n  };\n\n  const loginPasswordChange = event => {\n    setLoginPassword(event.target.value);\n  };\n\n  function sleep(time) {\n    return new Promise((resolve) => setTimeout(resolve, time)\n    )\n  }\n\n  const registrarse = () => {\n    fetch(`/login/register?user=${regUsuario}&email=${regEmail}&pass=${regPassword}`)\n      .then(async response => {\n        const data = await response.json();\n        sleep(500).then(() => {\n          location.replace('/menu');\n        })\n      })\n      .catch(async error => {\n        sleep(500).then(() => {\n          location.replace('/menu');\n        })\n      });\n  };\n  const iniciarSesion = () => {\n    fetch(`/login/entry?user=${loginUsuario}&pass=${loginPassword}`)\n      .then(async response => {\n        const data = await response.json();\n        sleep(500).then(() => {\n          location.replace('/menu');\n        })\n      })\n      .catch(async error => {\n        sleep(500).then(() => {\n          location.replace('/menu');\n        })\n      });\n  };\n  return (\n    <Fragment>\n      <div className={styles.logForm}>\n        <div className={`${styles.signup} ${!isLogin ? styles.slideUp : ''}`}>\n          <h2 className={styles.formTitle} onClick={() => onToggleView()}>\n            <span>or</span>Registrate\n          </h2>\n          <div className={styles.formHolder}>\n            <div className={styles.inputWrap}>\n              <input\n                type=\"text\"\n                className={styles.input}\n                placeholder=\"Usuario\"\n                id=\"regUsuario\"\n                name=\"regUsuario\"\n                onChange={regUsuarioChange}\n                value={regUsuario}\n              />\n            </div>\n            <div className={styles.inputWrap}>\n              <input\n                id=\"logInPass\"\n                type=\"email\"\n                className={styles.input}\n                placeholder=\"Email\"\n                name=\"regEmail\"\n                onChange={regEmailChange}\n                value={regEmail}\n              />\n            </div>\n            <div className={styles.inputWrap}>\n              <input\n                className={styles.input}\n                id=\"pass\"\n                placeholder=\"Contraseña\"\n                type=\"password\"\n                name=\"regPassword\"\n                onChange={regPasswordChange}\n                value={regPassword}\n              />\n              <i id=\"eye\" className=\"fa fa-eye showPass\"></i>\n            </div>\n          </div>\n          <button onClick={registrarse} className={styles.submitButton}>\n            Registrate\n          </button>\n        </div>\n        <div className={`${styles.login} ${isLogin ? styles.slideUp : ''}`}>\n          <div className={styles.center}>\n            <h2 className={styles.formTitle} onClick={() => onToggleView()}>\n              <span>o</span>Inicia sesión\n            </h2>\n            <div className={styles.formHolder}>\n              <input\n                type=\"email\"\n                className={styles.input}\n                placeholder=\"Email\"\n                name=\"loginUsuario\"\n                onChange={loginUsuarioChange}\n                value={loginUsuario}\n              />\n              <input\n                className={styles.input}\n                id=\"pwd\"\n                placeholder=\"Contraseña\"\n                name=\"loginPassword\"\n                onChange={loginPasswordChange}\n                value={loginPassword}\n                type={isPassVisible ? 'text' : 'password'}\n              />\n            </div>\n            <button onClick={iniciarSesion} className={styles.submitButton}>\n              Inicia sesión\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n","import React from 'react';\n\nimport styles from './App.module.scss';\n\nimport { Header } from 'interfaces/.components/Header';\nimport { Footer } from 'interfaces/.components/Footer';\nimport { Login } from 'interfaces/.components/Login';\n\nexport const App = () => {\n  return (\n    <div className={styles.app}>\n      <Header />\n      <Login />\n      <Footer />\n    </div>\n  );\n};\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nimport { App } from 'App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If youant your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}